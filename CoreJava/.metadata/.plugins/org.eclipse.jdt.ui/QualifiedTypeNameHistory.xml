<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="java.lang.StringBuilder"/>
    <fullyQualifiedTypeName name="java.lang.Number"/>
    <fullyQualifiedTypeName name="java.util.Stack"/>
    <fullyQualifiedTypeName name="javax.xml.transform.stream.StreamSource"/>
    <fullyQualifiedTypeName name="java.io.StringBufferInputStream"/>
    <fullyQualifiedTypeName name="java.lang.ArithmeticException"/>
    <fullyQualifiedTypeName name="practice.AbsrtactDeno"/>
    <fullyQualifiedTypeName name="practice.LazyInitialization"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="java.util.LinkedList"/>
    <fullyQualifiedTypeName name="java.time.format.DateTimeFormatter"/>
    <fullyQualifiedTypeName name="java.util.Locale"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="comp"/>
    <fullyQualifiedTypeName name="practice.Alphabet"/>
    <fullyQualifiedTypeName name="java.lang.Float"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="practice.NotANumber"/>
    <fullyQualifiedTypeName name="java.lang.NullPointerException"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="practice.subDeno"/>
    <fullyQualifiedTypeName name="java.security.DigestException"/>
    <fullyQualifiedTypeName name="practice.DivisionByZero"/>
    <fullyQualifiedTypeName name="java.lang.StringBuffer"/>
    <fullyQualifiedTypeName name="practice.Book1"/>
    <fullyQualifiedTypeName name="practice.Demo"/>
    <fullyQualifiedTypeName name="practice.book2"/>
    <fullyQualifiedTypeName name="java.lang.FunctionalInterface"/>
    <fullyQualifiedTypeName name="java8Updates.lambda.MultiplicationInt"/>
    <fullyQualifiedTypeName name="java.util.function.Predicate"/>
    <fullyQualifiedTypeName name="java.net.Socket"/>
    <fullyQualifiedTypeName name="conditional_loops.switch_Cases"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="java.security.KeyStore.Entry"/>
    <fullyQualifiedTypeName name="java.util.LinkedHashMap"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="InterviewQuestions.Child"/>
    <fullyQualifiedTypeName name="InterviewQuestions.Parent"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="Arrays.Arrays2d"/>
    <fullyQualifiedTypeName name="Arrays.ArrayListEx"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="streamapi.EmployeeDb"/>
    <fullyQualifiedTypeName name="streamapi.Employee"/>
    <fullyQualifiedTypeName name="java.util.stream.IntStream"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="RemoveVal"/>
    <fullyQualifiedTypeName name="conditional_loops.Main"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="binarySearch.MountainArray"/>
    <fullyQualifiedTypeName name="java.util.List"/>
</qualifiedTypeNameHistroy>
